{"ast":null,"code":"import _objectSpread from \"/home/shreyas/Documents/DBMS Project GIT/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/shreyas/Documents/DBMS Project GIT/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shreyas/Documents/DBMS Project GIT/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shreyas/Documents/DBMS Project GIT/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shreyas/Documents/DBMS Project GIT/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shreyas/Documents/DBMS Project GIT/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shreyas/Documents/DBMS Project GIT/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shreyas/Documents/DBMS Project GIT/DBMS-Project/supermarketUI/src/views/examples/Notification.jsx\";\n\n/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { connect } from \"react-redux\"; // reactstrap components\n\nimport firebase from '../../config/fbConfig';\nimport { Button, Card, CardHeader, CardBody, FormGroup, Form, Input, Container, Row, Col } from \"reactstrap\"; // core components\n\nimport UserHeader from \"components/Headers/UserHeader.jsx\";\n\nvar Notification =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Notification, _React$Component);\n\n  function Notification(props) {\n    var _this;\n\n    _classCallCheck(this, Notification);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Notification).call(this, props));\n\n    _this.renderCard = function (doc) {\n      // const cardList = document.getElementById('cardList');\n      // let li = document.createElement('li');\n      // let name = document.createElement('span');\n      // let city = document.createElement('span');\n      // li.setAttribute('data-id', doc.id);\n      // name.textContent = doc.data().name;\n      // city.textContent = doc.data().city;\n      // li.appendChild(name);\n      // li.appendChild(city);\n      // console.log(doc)\n      // cardList.appendChild(li);\n      console.log(doc);\n    };\n\n    _this.state = {\n      adminName: null,\n      employee: null\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Notification, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(this.props);\n\n      var setP = function setP(name) {\n        _this2.setState(_objectSpread({}, _this2.state, {\n          adminName: name\n        }));\n\n        var db = firebase.firestore();\n        db.collection(\"argon\").onSnapshot(function (snap) {\n          var changes = snap.docChanges();\n          changes.forEach(function (change) {\n            console.log(change);\n\n            _this2.renderCard(change);\n          });\n        });\n      };\n\n      var db = firebase.firestore();\n      db.collection(\"argon\").onSnapshot(function (snap) {\n        var changes = snap.docChanges();\n        changes.forEach(function (change) {\n          console.log(change.doc.data());\n\n          _this2.renderCard(change.doc.data());\n        });\n      });\n      var data = {\n        adminId: this.props.adminId\n      };\n      fetch(\"/adminName\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(function (response) {\n        if (response.status >= 400) {\n          throw new Error(\"Bad response from server\");\n        }\n\n        return response.json();\n      }).then(function (data) {\n        if (data.status === \"success\") {\n          setP(data.name[0].name);\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this3 = this;\n\n      event.preventDefault();\n\n      var setE = function setE(emp) {\n        _this3.setState(_objectSpread({}, _this3.state, {\n          employee: emp\n        }));\n      };\n\n      var data = {\n        name: event.target.name.value,\n        password: event.target.password.value,\n        phoneno: event.target.phoneno.value,\n        address: event.target.address.value,\n        accno: event.target.accno.value\n      };\n      fetch(\"/empreg\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(function (response) {\n        if (response.status >= 400) {\n          throw new Error(\"Bad response from server\");\n        }\n\n        return response.json();\n      }).then(function (data) {\n        if (data.status === \"success\") {\n          setE(data.data[0]);\n          document.getElementById(\"regForm\").reset();\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(UserHeader, {\n        adminName: this.state.adminName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        id: \"cardList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Notification;\n}(React.Component);\n\nexport default Notification;","map":{"version":3,"sources":["/home/shreyas/Documents/DBMS Project GIT/DBMS-Project/supermarketUI/src/views/examples/Notification.jsx"],"names":["React","connect","firebase","Button","Card","CardHeader","CardBody","FormGroup","Form","Input","Container","Row","Col","UserHeader","Notification","props","renderCard","doc","console","log","state","adminName","employee","handleSubmit","bind","setP","name","setState","db","firestore","collection","onSnapshot","snap","changes","docChanges","forEach","change","data","adminId","fetch","method","headers","body","JSON","stringify","then","response","status","Error","json","catch","err","event","preventDefault","setE","emp","target","value","password","phoneno","address","accno","document","getElementById","reset","Component"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport {connect} from \"react-redux\";\n// reactstrap components\nimport firebase from '../../config/fbConfig'\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"components/Headers/UserHeader.jsx\";\n\nclass Notification extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      adminName: null,\n      employee : null\n    }\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n  renderCard =(doc)=>{\n      // const cardList = document.getElementById('cardList');\n      // let li = document.createElement('li');\n      // let name = document.createElement('span');\n      // let city = document.createElement('span');\n  \n      // li.setAttribute('data-id', doc.id);\n      // name.textContent = doc.data().name;\n      // city.textContent = doc.data().city;\n  \n      // li.appendChild(name);\n      // li.appendChild(city);\n      // console.log(doc)\n      // cardList.appendChild(li);\n      console.log(doc)\n  }\n  componentDidMount(){\n    console.log(this.props)\n    const setP=(name)=>{\n      this.setState ({\n        ...this.state,\n        adminName : name\n      })\n\n      const db = firebase.firestore();\n\n    db.collection(\"argon\")\n    .onSnapshot((snap) => {\n      const changes = snap.docChanges();\n      changes.forEach((change) => {\n        console.log(change)\n          this.renderCard(change)\n      })\n    })\n    }\n    const db = firebase.firestore();\n\n    db.collection(\"argon\")\n    .onSnapshot((snap) => {\n      const changes = snap.docChanges();\n      changes.forEach((change) =>{console.log(change.doc.data())\n      this.renderCard(change.doc.data())\n      })\n    })\n\n    const data = {adminId :this.props.adminId}\n\n    fetch(\"/adminName\", {\n      method: 'POST',\n      headers: {\n      'Content-Type': 'application/json'},\n      body: JSON.stringify(data) \n      })\n      .then(function(response) {\n        if (response.status >= 400) {\n          throw new Error(\"Bad response from server\");\n        }\n        return response.json();\n      })\n      .then(function(data){         \n      if(data.status === \"success\"){\n        setP(data.name[0].name)\n      }\n      }).catch(function(err) {\n      console.log(err)\n      });\n  }\n\n    handleSubmit(event){\n\n      event.preventDefault();\n      const setE = (emp)=>{\n        this.setState({\n          ...this.state,\n          employee : emp\n        })\n      }\n      const data = {\n        name : event.target.name.value\n        ,password : event.target.password.value\n        ,phoneno : event.target.phoneno.value\n        ,address :event.target.address.value\n        ,accno: event.target.accno.value\n      }\n\n\n      fetch(\"/empreg\", {\n        method: 'POST',\n        headers: {\n        'Content-Type': 'application/json'},\n        body: JSON.stringify(data) \n        })\n        .then(function(response) {\n          if (response.status >= 400) {\n            throw new Error(\"Bad response from server\");\n          }\n          return response.json();\n        })\n        .then(function(data){         \n        if(data.status === \"success\"){\n          setE(data.data[0])\n          document.getElementById(\"regForm\").reset()\n        }\n        }).catch(function(err) {\n        console.log(err)\n        });\n    }\n  render() {\n    return (\n      <>\n        <UserHeader adminName={this.state.adminName}/>\n        {/* Page content */}\n        <ul id=\"cardList\">\n\n        </ul>\n      </>\n    );\n   \n  }\n}\n\nexport default (Notification);\n"]},"metadata":{},"sourceType":"module"}