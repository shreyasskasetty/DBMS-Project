{"ast":null,"code":"import _classCallCheck from \"/home/shreyas/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shreyas/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shreyas/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shreyas/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shreyas/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/shreyas/DBMS-Project/supermarketUI/src/views/examples/AdminLogin.jsx\";\n\n/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, FormGroup, Form, Input, InputGroupAddon, InputGroupText, InputGroup, Col } from \"reactstrap\";\n\nvar AdminLogin =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AdminLogin, _React$Component);\n\n  function AdminLogin(props) {\n    var _this;\n\n    _classCallCheck(this, AdminLogin);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AdminLogin).call(this, props));\n    console.log(props);\n    return _this;\n  }\n\n  _createClass(AdminLogin, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      console.log('Sign In');\n      console.log(\"ELogin: \" + this.props.eLogin + \" ALogin: \" + this.props.aLogin);\n\n      if (!(this.props.eLogin ^ this.props.aLogin)) {\n        var tempProp = this.props;\n        console.log(event.target.adminid.value);\n        var data = {\n          adminid: event.target.adminid.value,\n          password: event.target.password.value,\n          mssg: ''\n        };\n        fetch(\"/adlogin\", {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        }).then(function (response) {\n          if (response.status >= 400) {\n            throw new Error(\"Bad response from server\");\n          }\n\n          return response.json();\n        }).then(function (dat) {\n          if (dat.success) {\n            tempProp.updateEmpId(data.adminid);\n            window.location.assign(\"/admin/Notification\");\n          } else alert('Wrong Password'); // redirect to other page\n\n        }).catch(function (err) {\n          console.log(err);\n        });\n      } else alert('eMPLOYEE Should Logout');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Formik, {\n        initialValues: {\n          adminid: \"\",\n          password: \"\"\n        },\n        onSubmit: function onSubmit(values, _ref) {\n          var setSubmitting = _ref.setSubmitting;\n          setTimeout(function () {\n            console.log(\"Logging in\", values);\n            setSubmitting(false);\n          }, 500);\n        },\n        validationSchema: Yup.object().shape({\n          adminid: Yup.number().required(\"No Admin ID provided\").positive().integer(),\n          password: Yup.string().required(\"No password provided.\").min(4, \"password is tooo short - should be 4 characters atleast\")\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, function (props) {\n        var values = props.values,\n            touched = props.touched,\n            errors = props.errors,\n            isSubmitting = props.isSubmitting,\n            handleChange = props.handleChange,\n            handleBlur = props.handleBlur,\n            handleSubmit = props.handleSubmit,\n            isValid = props.isValid;\n        return React.createElement(React.Fragment, null, React.createElement(Col, {\n          lg: \"6\",\n          md: \"8\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(Card, {\n          className: \"bg-secondary shadow border-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(CardHeader, {\n          className: \"bg-transparent pb-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"text-muted text-center mt-2 mb-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(\"small\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, \"Sign In\"))), React.createElement(CardBody, {\n          className: \"px-lg-5 py-lg-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, React.createElement(Form, {\n          id: \"admin-login-form\",\n          role: \"form\",\n          onSubmit: function onSubmit(event) {\n            return _this2.handleSubmit(event);\n          },\n          method: \"POST\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(InputGroup, {\n          className: \"input-group-alternative mb-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, React.createElement(InputGroupAddon, {\n          addonType: \"prepend\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(InputGroupText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"ni ni-hat-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }))), React.createElement(Input, {\n          placeholder: \"LoginID\",\n          type: \"number\",\n          value: values.adminid,\n          onChange: handleChange,\n          onBlur: handleBlur,\n          name: \"adminid\",\n          className: errors.adminid && touched.adminid && \"error\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        })), errors.adminid && touched.adminid && React.createElement(\"div\", {\n          style: {\n            color: 'red'\n          },\n          className: \"input-feedback\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, errors.adminid)), React.createElement(FormGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, React.createElement(InputGroup, {\n          className: \"input-group-alternative\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, React.createElement(InputGroupAddon, {\n          addonType: \"prepend\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, React.createElement(InputGroupText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"ni ni-lock-circle-open\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }))), React.createElement(Input, {\n          placeholder: \"Password\",\n          type: \"password\",\n          name: \"password\",\n          value: values.password,\n          onChange: handleChange,\n          onBlur: handleBlur,\n          className: errors.password && touched.password && \"error\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        })), errors.password && touched.password && React.createElement(\"div\", {\n          style: {\n            color: 'red'\n          },\n          className: \"input-feedback\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, errors.password)), React.createElement(\"div\", {\n          className: \"text-muted font-italic\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, React.createElement(\"small\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, \"password strength:\", \" \", React.createElement(\"span\", {\n          className: \"text-success font-weight-700\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, \"strong\"))), React.createElement(\"div\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"my-4\",\n          color: \"primary\",\n          type: \"submit\",\n          disabled: isSubmitting,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, \"Sign in\"))))))));\n      });\n    }\n  }]);\n\n  return AdminLogin;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    eLogin: state.eLogin,\n    aLogin: state.aLogin\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateEmpId: function updateEmpId(id) {\n      dispatch({\n        type: 'updateAdminID',\n        adminid: id,\n        aLogin: true\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminLogin);","map":{"version":3,"sources":["/home/shreyas/DBMS-Project/supermarketUI/src/views/examples/AdminLogin.jsx"],"names":["React","connect","Formik","Yup","Button","Card","CardHeader","CardBody","FormGroup","Form","Input","InputGroupAddon","InputGroupText","InputGroup","Col","AdminLogin","props","console","log","event","preventDefault","eLogin","aLogin","tempProp","target","adminid","value","data","password","mssg","fetch","method","headers","body","JSON","stringify","then","response","status","Error","json","dat","success","updateEmpId","window","location","assign","alert","catch","err","values","setSubmitting","setTimeout","object","shape","number","required","positive","integer","string","min","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","isValid","color","Component","mapStateToProps","state","mapDispatchToProps","dispatch","id","type"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport {connect} from 'react-redux';\nimport {Formik} from 'formik'\nimport * as Yup from 'yup'\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Col\n} from \"reactstrap\";\nclass AdminLogin extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(props)\n  } \n  \n    \n    handleSubmit(event){\n      event.preventDefault();\n      console.log('Sign In')\n      console.log(\"ELogin: \"+this.props.eLogin+\" ALogin: \"+this.props.aLogin)\n      if (!(this.props.eLogin ^ this.props.aLogin))\n      {\n      const tempProp = this.props;\n      console.log(event.target.adminid.value);\n      const data = {\n        adminid :  event.target.adminid.value, \n        password : event.target.password.value, \n        mssg : ''\n      }\n      \n      fetch(\"/adlogin\", {\n        method: 'POST',\n        headers: {\n        'Content-Type': 'application/json'},\n        body: JSON.stringify(data) \n    }).then(function(response) {\n        if (response.status >= 400) {\n          throw new Error(\"Bad response from server\");\n        }\n        return response.json();\n    }).then(function(dat) {\n     \n        if(dat.success)\n        {\n        tempProp.updateEmpId(data.adminid)\n        window.location.assign(\"/admin/Notification\");\n        }\n        else\n         alert('Wrong Password')\n       // redirect to other page\n    }).catch(function(err) {\n        console.log(err)\n    });\n    }\n    else alert('eMPLOYEE Should Logout');\n  \n    }\n\n  render() {\n    return (\n      <Formik initialValues={{adminid:\"\",password: \"\"}}\n      onSubmit={(values, {setSubmitting})=> {\n          setTimeout(()=>{\n              console.log(\"Logging in\",values);\n              setSubmitting(false)\n          },500);\n      }}\n\n\n      validationSchema={Yup.object().shape({\n          adminid: Yup\n          .number()\n          .required(\"No Admin ID provided\")\n          .positive()\n          .integer(),\n          password: Yup.string()\n          .required(\"No password provided.\")\n          .min(4,\"password is tooo short - should be 4 characters atleast\")\n      })}\n      >\n          {\n              props=>{\n                  const{\n                      values,\n                      touched,\n                      errors,\n                      isSubmitting,\n                      handleChange,\n                      handleBlur,\n                      handleSubmit,\n                      isValid\n                  \n              \n          } = props;\n          return (\n    <>\n      <Col lg=\"6\" md=\"8\">\n        <Card className=\"bg-secondary shadow border-0\">\n          <CardHeader className=\"bg-transparent pb-5\">\n            <div className=\"text-muted text-center mt-2 mb-4\">\n              <small>Sign In</small>\n            </div>\n            \n          </CardHeader>\n          <CardBody className=\"px-lg-5 py-lg-5\">\n           \n            <Form id=\"admin-login-form\" role=\"form\" onSubmit={event => this.handleSubmit(event)} method=\"POST\">\n\n              <FormGroup>\n                <InputGroup className=\"input-group-alternative mb-3\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-hat-3\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input placeholder=\"LoginID\" \n                  type=\"number\" \n                  value={values.adminid} \n                  onChange={handleChange} \n                  onBlur={handleBlur} \n                  name= \"adminid\"\n                  className={errors.adminid && touched.adminid && \"error\"}/>\n                </InputGroup>\n                {errors.adminid && touched.adminid && (\n          <div style={{color: 'red'}} className=\"input-feedback\">{errors.adminid}</div>\n              )}\n              </FormGroup>\n            \n              <FormGroup>\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-lock-circle-open\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input placeholder=\"Password\" \n                  type=\"password\" \n                  name = \"password\" \n                  value={values.password} \n                  onChange={handleChange} \n                  onBlur={handleBlur}\n                  className={errors.password && touched.password && \"error\"}/>\n                </InputGroup>\n                {errors.password && touched.password && (\n          <div style={{color:'red'}}className=\"input-feedback\">{errors.password}</div>\n        )}\n              </FormGroup>\n              \n              <div className=\"text-muted font-italic\">\n                <small>\n                  password strength:{\" \"}\n                  <span className=\"text-success font-weight-700\">strong</span>\n                </small>\n              </div>\n              \n              <div className=\"text-center\">\n                \n                {/* Sign in BUTTON */}\n              <div className=\"text-center\">\n                <Button className=\"my-4\" color=\"primary\" type=\"submit\" disabled={isSubmitting}>\n                  Sign in\n                </Button>\n              </div>\n              </div>\n            </Form>\n          </CardBody>\n        </Card>\n      </Col>\n    </>\n  );\n                }}\n      </Formik>\n    );\n  }\n}\nconst mapStateToProps = (state) =>{\n  return {\n    eLogin : state.eLogin,\n    aLogin : state.aLogin\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateEmpId : (id) =>{\n      dispatch({\n        type : 'updateAdminID',\n        adminid : id,\n        aLogin : true\n      })\n    }\n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(AdminLogin);\n"]},"metadata":{},"sourceType":"module"}