{"ast":null,"code":"var _jsxFileName = \"/home/shreyas/Documents/DBMS Project GIT/DBMS-Project/supermarketUI/src/index.js\";\n\n/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport \"assets/vendor/nucleo/css/nucleo.css\";\nimport \"assets/vendor/@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/scss/argon-dashboard-react.scss\";\nimport { createStore } from 'redux';\nimport AdminLayout from \"layouts/Admin.jsx\";\nimport AuthLayout from \"layouts/Auth.jsx\";\nimport { Provider } from 'react-redux';\nimport rootReducer from 'reducers/rootReducer.js';\n\nvar saveState = function saveState(state) {\n  try {\n    // Convert the state to a JSON string \n    var serialisedState = JSON.stringify(state); // Save the serialised state to localStorage against the key 'app_state'\n\n    window.localStorage.setItem('app_state', serialisedState);\n  } catch (err) {// Log errors here, or ignore\n  }\n};\n\nvar loadState = function loadState() {\n  try {\n    // Load the data saved in localStorage, against the key 'app_state'\n    var serialisedState = window.localStorage.getItem('app_state'); // Passing undefined to createStore will result in our app getting the default state\n    // If no data is saved, return undefined\n\n    if (!serialisedState) return undefined; // De-serialise the saved state, and return it.\n\n    return JSON.parse(serialisedState);\n  } catch (err) {\n    // Return undefined if localStorage is not available, \n    // or data could not be de-serialised, \n    // or there was some other error\n    return undefined;\n  }\n};\n\nvar oldState = loadState();\nvar store = createStore(rootReducer, oldState);\nstore.subscribe(function () {\n  console.log('state updated');\n  console.log(store.getState());\n  saveState(store.getState());\n});\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}, \",\", React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}, React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}, React.createElement(Route, {\n  path: \"/auth\",\n  render: function render(props) {\n    return React.createElement(AuthLayout, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }));\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/admin\",\n  render: function render(props) {\n    return React.createElement(AdminLayout, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }));\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n}), React.createElement(Redirect, {\n  from: \"/\",\n  to: \"/auth/login\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76\n  },\n  __self: this\n})))), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/shreyas/Documents/DBMS Project GIT/DBMS-Project/supermarketUI/src/index.js"],"names":["React","ReactDOM","BrowserRouter","Route","Switch","Redirect","createStore","AdminLayout","AuthLayout","Provider","rootReducer","saveState","state","serialisedState","JSON","stringify","window","localStorage","setItem","err","loadState","getItem","undefined","parse","oldState","store","subscribe","console","log","getState","render","props","document","getElementById"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;AAiBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,QAAvC,QAAuD,kBAAvD;AAEA,OAAO,qCAAP;AACA,OAAO,6DAAP;AACA,OAAO,wCAAP;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAC3B,MAAI;AACA;AACA,QAAMC,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAxB,CAFA,CAIA;;AACAI,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,EAAyCL,eAAzC;AACH,GAND,CAME,OAAOM,GAAP,EAAY,CACV;AACH;AACF,CAVD;;AAYA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,MAAI;AACA;AACA,QAAMP,eAAe,GAAGG,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4B,WAA5B,CAAxB,CAFA,CAIA;AACA;;AACA,QAAI,CAACR,eAAL,EAAsB,OAAOS,SAAP,CANtB,CAQA;;AACA,WAAOR,IAAI,CAACS,KAAL,CAAWV,eAAX,CAAP;AACH,GAVD,CAUE,OAAOM,GAAP,EAAY;AACV;AACA;AACA;AACA,WAAOG,SAAP;AACH;AACF,CAjBD;;AAkBA,IAAME,QAAQ,GAAGJ,SAAS,EAA1B;AACA,IAAMK,KAAK,GAAGnB,WAAW,CAACI,WAAD,EAAac,QAAb,CAAzB;AAEAC,KAAK,CAACC,SAAN,CAAgB,YAAM;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,QAAN,EAAZ;AACAlB,EAAAA,SAAS,CAACc,KAAK,CAACI,QAAN,EAAD,CAAT;AACD,CAJD;AAKA5B,QAAQ,CAAC6B,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEL,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,OAAZ;AAAoB,EAAA,MAAM,EAAE,gBAAAM,KAAK;AAAA,WAAI,oBAAC,UAAD,oBAAgBA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;AAAA,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,QAAZ;AAAqB,EAAA,MAAM,EAAE,gBAAAA,KAAK;AAAA,WAAI,oBAAC,WAAD,oBAAiBA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;AAAA,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,EAIE,oBAAC,QAAD;AAAU,EAAA,IAAI,EAAC,GAAf;AAAmB,EAAA,EAAE,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJF,CADF,CADA,CADF,EAWEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAXF","sourcesContent":["/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"assets/vendor/nucleo/css/nucleo.css\";\nimport \"assets/vendor/@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/scss/argon-dashboard-react.scss\";\nimport { createStore } from 'redux';\nimport AdminLayout from \"layouts/Admin.jsx\";\nimport AuthLayout from \"layouts/Auth.jsx\";\nimport { Provider } from 'react-redux';\nimport rootReducer from 'reducers/rootReducer.js';\n\nconst saveState = (state) => {\n  try {\n      // Convert the state to a JSON string \n      const serialisedState = JSON.stringify(state);\n\n      // Save the serialised state to localStorage against the key 'app_state'\n      window.localStorage.setItem('app_state', serialisedState);\n  } catch (err) {\n      // Log errors here, or ignore\n  }\n};\n\nconst loadState = () => {\n  try {\n      // Load the data saved in localStorage, against the key 'app_state'\n      const serialisedState = window.localStorage.getItem('app_state');\n\n      // Passing undefined to createStore will result in our app getting the default state\n      // If no data is saved, return undefined\n      if (!serialisedState) return undefined;\n\n      // De-serialise the saved state, and return it.\n      return JSON.parse(serialisedState);\n  } catch (err) {\n      // Return undefined if localStorage is not available, \n      // or data could not be de-serialised, \n      // or there was some other error\n      return undefined;\n  }\n};\nconst oldState = loadState();\nconst store = createStore(rootReducer,oldState);\n\nstore.subscribe(() => {\n  console.log('state updated');\n  console.log(store.getState());\n  saveState(store.getState());\n})\nReactDOM.render(\n  <Provider store={store}>,\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/auth\" render={props => <AuthLayout {...props} />} />\n      <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\n      \n      <Redirect from=\"/\" to=\"/auth/login\" />\n    </Switch>\n  </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"]},"metadata":{},"sourceType":"module"}