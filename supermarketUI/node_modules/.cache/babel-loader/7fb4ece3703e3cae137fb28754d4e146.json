{"ast":null,"code":"import _defineProperty from \"/home/shreyas/Documents/DBMS Project GIT/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/shreyas/Documents/DBMS Project GIT/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shreyas/Documents/DBMS Project GIT/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shreyas/Documents/DBMS Project GIT/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shreyas/Documents/DBMS Project GIT/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shreyas/Documents/DBMS Project GIT/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shreyas/Documents/DBMS Project GIT/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shreyas/Documents/DBMS Project GIT/DBMS-Project/supermarketUI/src/views/examples/Register.jsx\";\n\n/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport firebase from '../../config/fbConfig'; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, FormGroup, Form, Input, InputGroupAddon, InputGroupText, InputGroup, Row, Col } from \"reactstrap\";\n\nvar Register =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Register, _React$Component);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this, props));\n    console.log(props.eLogin);\n    _this.state = {\n      info: []\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.logChange = _this.logChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"logChange\",\n    value: function logChange(e) {\n      e.preventDefault();\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      console.log(this.props);\n      event.preventDefault();\n      var data = {\n        name: event.target.name.value,\n        emailid: event.target.emailid.value,\n        phoneno: event.target.phoneno.value,\n        address: event.target.address.value,\n        empid: this.props.empId,\n        mssg: this.state.msg\n      };\n      fetch(\"/signup\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(function (response) {\n        if (response.status >= 400) {\n          throw new Error(\"Bad response from server\");\n        }\n\n        return response.json();\n      }).then(function (data) {\n        document.getElementById('customer-form').reset();\n        alert('successully registered');\n\n        if (data === \"success\") {\n          this.setState({\n            msg: \"Thanks for registering\"\n          });\n          alert(this.state.msg);\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var db = firebase.firestore();\n      db.collection(\"argon\").get().then(function (querySnapshot) {\n        var data = querySnapshot.docs.map(function (doc) {\n          return doc.data();\n        });\n        console.log(data);\n\n        _this2.setState({\n          info: data\n        });\n\n        console.log(_this2.state.info);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, this.state.info[3].hostel));\n    }\n  }]);\n\n  return Register;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(state.empId);\n  return {\n    empId: state.empId,\n    adminId: state.adminId\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateEmpId: function updateEmpId() {\n      dispatch({\n        type: 'updateEmpID',\n        eLogin: false,\n        empid: -1\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","map":{"version":3,"sources":["/home/shreyas/Documents/DBMS Project GIT/DBMS-Project/supermarketUI/src/views/examples/Register.jsx"],"names":["React","connect","firebase","Button","Card","CardHeader","CardBody","FormGroup","Form","Input","InputGroupAddon","InputGroupText","InputGroup","Row","Col","Register","props","console","log","eLogin","state","info","handleSubmit","bind","logChange","e","preventDefault","setState","target","name","value","event","data","emailid","phoneno","address","empid","empId","mssg","msg","fetch","method","headers","body","JSON","stringify","then","response","status","Error","json","document","getElementById","reset","alert","catch","err","db","firestore","collection","get","querySnapshot","docs","map","doc","hostel","Component","mapStateToProps","adminId","mapDispatchToProps","dispatch","updateEmpId","type"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport {connect} from 'react-redux';\nimport firebase from '../../config/fbConfig';\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props)\n    console.log(props.eLogin)\n    this.state = {\n        info: []\n    }\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.logChange = this.logChange.bind(this);\n}\nlogChange(e) {\n  e.preventDefault();\n  this.setState({[e.target.name]: e.target.value});  \n}\n  handleSubmit(event){\n    console.log(this.props)\n    event.preventDefault();\n    const data = {\n      name : event.target.name.value\n      ,emailid : event.target.emailid.value\n      ,phoneno : event.target.phoneno.value\n      ,address :event.target.address.value\n      ,empid:this.props.empId\n      ,mssg : this.state.msg\n    }\n    fetch(\"/signup\", {\n      method: 'POST',\n      headers: {\n      'Content-Type': 'application/json'},\n      body: JSON.stringify(data) \n  }).then(function(response) {\n      if (response.status >= 400) {\n        throw new Error(\"Bad response from server\");\n      }\n      return response.json();\n  }).then(function(data) {\n    \n    document.getElementById('customer-form').reset();\n      alert('successully registered')\n     \n      \n      if(data === \"success\"){\n         this.setState({msg: \"Thanks for registering\"});\n         alert(this.state.msg) \n      }\n  }).catch(function(err) {\n      console.log(err)\n  });\n  }    \n  componentDidMount(){\n    const db = firebase.firestore();\n    db.collection(\"argon\")\n    .get()\n    .then(querySnapshot => {\n      const data = querySnapshot.docs.map(doc => doc.data());\n      console.log(data);\n      this.setState({info : data})\n      console.log(this.state.info)\n    });\n  \n  }\n  \n  render() {\n    return (\n      <>\n       <h1>{this.state.info[3].hostel}</h1>\n\n       </>\n    )}\n}\n\nconst mapStateToProps=(state)=>{\n  console.log(state.empId)\n  return {\n    empId : state.empId,\n    adminId : state.adminId\n  }\n}\n const mapDispatchToProps= (dispatch)=>{\n   return {\n     updateEmpId : () =>{\n      dispatch({\n        type : 'updateEmpID',\n        eLogin : false,\n        empid : -1\n      })\n    }\n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(Register);\n"]},"metadata":{},"sourceType":"module"}