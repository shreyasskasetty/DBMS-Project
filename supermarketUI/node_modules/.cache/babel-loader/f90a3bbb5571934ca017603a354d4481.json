{"ast":null,"code":"import _objectSpread from \"/home/shreyas/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/shreyas/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shreyas/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shreyas/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shreyas/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shreyas/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shreyas/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shreyas/DBMS-Project/supermarketUI/src/views/examples/Billing.jsx\";\n\n/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport Yup from 'yup';\nimport Formik from 'formik';\nimport { Button, Card, CardHeader, Table, Row, Input, Form, Col } from \"reactstrap\";\n\nvar Billing =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Billing, _React$Component);\n\n  function Billing(_props) {\n    var _this;\n\n    _classCallCheck(this, Billing);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Billing).call(this, _props));\n\n    _this.billingList = function () {\n      return React.createElement(React.Fragment, null, React.createElement(Col, {\n        lg: \"6\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"border-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Product\")))), React.createElement(Table, {\n        className: \"align-items-center table-flush\",\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"thead-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Product\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Product ID\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Cost\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Quantity\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, _this.disp(_this.state.products)))), React.createElement(\"div\", {\n        className: \"text-muted text-center mt-2 mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: _this.handleClick,\n        name: \"generate\",\n        disabled: _this.state.checkQuant,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Generate Bill\"))));\n    };\n\n    _this.cList = function () {\n      var sum = 0;\n\n      _this.state.products.forEach(function (item) {\n        sum += item.cost * item.quantity;\n      });\n\n      var dispList = function dispList() {\n        return _this.state.products.map(function (data, key) {\n          if (data.quantity !== 0) {\n            return React.createElement(\"tr\", {\n              key: key,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 188\n              },\n              __self: this\n            }, React.createElement(\"th\", {\n              scope: \"row\",\n              className: \"text-center\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 189\n              },\n              __self: this\n            }, data.name), React.createElement(\"td\", {\n              className: \"text-center\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 190\n              },\n              __self: this\n            }, data.quantity));\n          } else {\n            return null;\n          }\n        });\n      };\n\n      var phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n      return React.createElement(Formik, {\n        initialValues: {\n          emailId: \"\",\n          phoneNo: \"\"\n        },\n        onSubmit: function onSubmit(values, _ref) {\n          var setSubmitting = _ref.setSubmitting;\n          setTimeout(function () {\n            _this.handleSubmit(values);\n\n            setSubmitting(false);\n          }, 500);\n        },\n        validationSchema: Yup.object().shape({\n          emailId: Yup.string().email('Please enter a valid email').required('Please enter an email'),\n          phoneNo: Yup.string().matches(phoneRegExp, 'Phone number is not valid').test('len', 'Must be exactly 10 characters', function (val) {\n            return val && val.toString().length === 10;\n          })\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, function (props) {\n        var values = props.values,\n            touched = props.touched,\n            errors = props.errors,\n            isSubmitting = props.isSubmitting,\n            handleChange = props.handleChange,\n            handleBlur = props.handleBlur,\n            handleSubmit = props.handleSubmit,\n            isValid = props.isValid;\n        return React.createElement(React.Fragment, null, React.createElement(Col, {\n          lg: \"6\",\n          md: \"9\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, React.createElement(Form, {\n          onSubmit: _this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }, React.createElement(Card, {\n          className: \"shadow\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, React.createElement(CardHeader, {\n          className: \"border-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, React.createElement(Row, {\n          className: \"align-items-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          className: \"mb-0 text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }, \"Product\")))), React.createElement(Table, {\n          className: \"align-items-center table-flush\",\n          responsive: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          className: \"thead-light\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          scope: \"col\",\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        }, \"Product\"), React.createElement(\"th\", {\n          scope: \"col\",\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        }, \"Quantity\"))), React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        }, dispList(), React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          scope: \"col\",\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }, \"Total\")), React.createElement(\"th\", {\n          id: \"sum\",\n          scope: \"col\",\n          className: \"text-center\",\n          name: \"sum\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, sum, \" \"))))), React.createElement(\"div\", {\n          className: \"text-muted text-center mt-2 mb-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264\n          },\n          __self: this\n        }, React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"form-control-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          className: \"text-white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        }, \"Phone Number\")), React.createElement(Input, {\n          className: \"form-control-alternative text-dark\",\n          id: \"phoneNo\",\n          type: \"number\",\n          name: \"phoneNo\",\n          value: values.phoneNo,\n          onChange: handleChange,\n          onBlur: handleBlur,\n          autoComplete: \"off\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        }), errors.phoneNo ? React.createElement(\"div\", {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        }, errors.phoneNo) : null, React.createElement(\"label\", {\n          className: \"form-control-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          className: \"text-white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        }, \"Email ID\")), React.createElement(Input, {\n          className: \"form-control-alternative text-dark\",\n          id: \"emailId\",\n          type: \"email\",\n          name: \"emailId\",\n          value: values.emailId,\n          onChange: handleChange,\n          onBlur: handleBlur,\n          autoComplete: \"off\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }), touched.emailId ? React.createElement(\"div\", {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302\n          },\n          __self: this\n        }, errors.emailId) : null), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        }), React.createElement(Button, {\n          value: sum,\n          color: \"primary\",\n          name: \"confirm\",\n          type: \"submit\",\n          disabled: !isValid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306\n          },\n          __self: this\n        }, \"Confirm Products\"), React.createElement(Button, {\n          color: \"primary\",\n          onClick: _this.handleClick,\n          name: \"back\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309\n          },\n          __self: this\n        }, \"Back\")))));\n      });\n    };\n\n    _this.disp = function (pro) {\n      return pro.map(function (data, key) {\n        if (!('quantity' in data)) data.quantity = null;\n        return React.createElement(\"tr\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357\n          },\n          __self: this\n        }, data.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358\n          },\n          __self: this\n        }, data.pid), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359\n          },\n          __self: this\n        }, data.cost), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          defaultValue: data.quantity,\n          className: \"number text-center\",\n          min: \"1\",\n          max: data.stock,\n          style: {\n            width: 50\n          },\n          onChange: function onChange(e) {\n            if (parseInt(e.target.value) <= data.stock) {\n              data.quantity = parseInt(e.target.value);\n              if (data.quantity === 0 || data.quantity === null) _this.setState({\n                checkQuant: true\n              });else _this.setState({\n                checkQuant: false\n              });\n            } else e.target.value = null;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362\n          },\n          __self: this\n        }), React.createElement(\"sub\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377\n          },\n          __self: this\n        }))));\n      });\n    };\n\n    _this.state = {\n      products: [],\n      list: 0,\n      sum: 0,\n      checkQuant: true\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.billingList = _this.billingList.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Billing, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      console.log(this.state.list);\n      event.preventDefault();\n      console.log(event.target.phoneNo.value);\n      var data = [];\n      this.state.products.forEach(function (item) {\n        if (item.quantity !== 0) {\n          var pro = {\n            pid: item.pid,\n            name: item.name,\n            quantity: item.quantity\n          };\n          data.push(pro);\n        }\n      });\n      console.log(data);\n      var d = new Date();\n      var date = d.getFullYear() + \":\" + d.getMonth() + \":\" + d.getDate();\n      var data1 = {\n        data: data,\n        phoneNo: event.target.phoneNo.value,\n        date: date,\n        emailid: event.target.emailId.value,\n        sum: document.getElementById('sum').textContent\n      };\n      console.log(data1);\n\n      if (data1.phoneNo) {\n        fetch(\"/confBilling\", {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data1)\n        }).then(function (response) {\n          if (response.status >= 400) {\n            throw new Error(\"Bad response from server\");\n          }\n\n          return response.json();\n        }).then(function (data) {\n          if (data.status === \"success\") {\n            window.location.assign(\"/auth/register\");\n          } else if (data.status === \"failure\") {\n            alert(data.message);\n          }\n        }).catch(function (err) {\n          console.log(err);\n        });\n      } else {\n        alert('Phone Number');\n      }\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      if (event.target.name === \"generate\") {\n        console.log(\"generate\");\n        this.setState(_objectSpread({}, this.state, {\n          list: 1\n        }));\n      }\n\n      if (event.target.name === \"back\") {\n        this.setState(_objectSpread({}, this.state, {\n          list: 0\n        }));\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      console.log(event.target);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var tempstate = this.state;\n\n      var setP = function setP(data) {\n        _this2.setState({\n          products: data\n        });\n      };\n\n      fetch(\"/productList\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        if (response.status >= 400) {\n          throw new Error(\"Bad response from server\");\n        }\n\n        return response.json();\n      }).then(function (data) {\n        console.log(data); //tempstate.products=data\n\n        if (tempstate.products.length === 0) setP(data);\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.state.list ? this.cList() : this.billingList();\n    }\n  }]);\n\n  return Billing;\n}(React.Component);\n\nexport default Billing;","map":{"version":3,"sources":["/home/shreyas/DBMS-Project/supermarketUI/src/views/examples/Billing.jsx"],"names":["React","Yup","Formik","Button","Card","CardHeader","Table","Row","Input","Form","Col","Billing","props","billingList","disp","state","products","handleClick","checkQuant","cList","sum","forEach","item","cost","quantity","dispList","map","data","key","name","phoneRegExp","emailId","phoneNo","values","setSubmitting","setTimeout","handleSubmit","object","shape","string","email","required","matches","test","val","toString","length","touched","errors","isSubmitting","handleChange","handleBlur","isValid","color","pro","pid","stock","width","e","parseInt","target","value","setState","list","bind","event","console","log","preventDefault","push","d","Date","date","getFullYear","getMonth","getDate","data1","emailid","document","getElementById","textContent","fetch","method","headers","body","JSON","stringify","then","response","status","Error","json","window","location","assign","alert","message","catch","err","tempstate","setP","Component"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport Yup from 'yup'\nimport Formik from 'formik'\nimport {\n  Button,\n  Card,\n  CardHeader,\n  Table,\n  Row,\n  Input,\n  Form,\n  Col\n} from \"reactstrap\";\n\nclass Billing extends React.Component {\n  \n  constructor(props) {\n    super(props)  \n    this.state={\n      products:[],\n      list : 0,\n      sum : 0,\n      checkQuant: true\n    }\n    this.handleClick = this.handleClick.bind(this)\n    this.billingList = this.billingList.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n}\n  handleSubmit(event){\n    console.log(this.state.list)\n    event.preventDefault();\n    console.log(event.target.phoneNo.value)\n        \n        var data = []\n        this.state.products.forEach(function(item){\n          if (item.quantity !== 0){\n            var pro = {\n            pid : item.pid,\n            name : item.name,\n            quantity : item.quantity\n            }\n            data.push(pro)\n          }\n        });\n        \n        console.log(data)\n        var d = new Date()\n        var date = d.getFullYear()+\":\"+d.getMonth()+\":\"+d.getDate()\n        const data1 = {\n          data : data,\n          phoneNo : event.target.phoneNo.value,\n          date : date,\n          emailid: event.target.emailId.value,\n          sum : document.getElementById('sum').textContent\n        }\n        console.log(data1)\n        if (data1.phoneNo)\n        {\n          fetch(\"/confBilling\", {\n            method: 'POST',\n            headers: {\n            'Content-Type': 'application/json'},\n            body: JSON.stringify(data1) \n            })\n            .then(function(response) {\n              if (response.status >= 400) {\n                throw new Error(\"Bad response from server\");\n              }\n              return response.json();\n            })\n            .then(function(data){         \n              if (data.status === \"success\")\n              {\n                window.location.assign(\"/auth/register\");\n              }\n              else if (data.status === \"failure\")\n              {\n                alert(data.message)\n              }\n            }).catch(function(err) {\n            console.log(err)\n            });\n        }\n        else {\n          alert('Phone Number')\n        }\n  }\n\n  handleClick(event){\n\n    if (event.target.name === \"generate\"){\n      console.log(\"generate\")\n      \n      this.setState({\n      ...this.state,\n      list : 1\n      })  \n    }\n\n    if (event.target.name === \"back\"){\n     \n      this.setState({\n        ...this.state,\n        list : 0\n      })  \n    }\n  }\n  handleChange(event){\n    console.log(event.target)\n  }\n  billingList =()=>{\n    return (\n      <>\n        {/*Iot Tag registration form tag*/ }\n        <Col lg=\"6\" md=\"9\">\n        <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Product</h3>\n                    </div>\n                    {/* <div className=\"col text-right\">\n                      <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                        size=\"sm\"\n                      >\n                        See all\n                      </Button>\n                    </div> */}\n                  </Row>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">Product</th>\n                      <th scope=\"col\">Product ID</th>\n                      <th scope=\"col\">Cost</th>\n                      <th scope=\"col\">Quantity</th>\n                      <th scope=\"col\" />\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.disp(this.state.products)}\n                  </tbody>\n                </Table>\n              </Card>\n              <div className=\"text-muted text-center mt-2 mb-4\">\n              <Button color=\"primary\" onClick={this.handleClick} name = \"generate\" disabled={this.state.checkQuant}> \n              Generate Bill\n              </Button>\n              </div>\n              \n        </Col>\n        \n        \n   </>\n  )}\n  \n  cList = ()=>{\n    var sum = 0;\n    this.state.products.forEach(function(item){\n      sum += item.cost * item.quantity\n    });\n    const dispList = () => {\n      return (\n        this.state.products.map((data,key)=>{\n          if (data.quantity !== 0){          \n          return(\n          <tr key={key}>\n            <th scope=\"row\" className = \"text-center\">{data.name}</th>\n            <td className = \"text-center\">{data.quantity}</td>\n          </tr>\n          )\n          }\n          else\n          {return null} \n            \n      })\n    )}\n    const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\n    return(\n      <Formik\n      initialValues={{emailId:\"\",phoneNo: \"\"}}\n        onSubmit={(values, {setSubmitting})=> {\n            setTimeout(()=>{\n                this.handleSubmit(values)\n                setSubmitting(false)\n            },500);\n        }}\n\n\n        validationSchema={Yup.object().shape({\n          emailId: Yup.string()\n          .email('Please enter a valid email')\n          .required('Please enter an email'),\n          phoneNo: Yup.string().matches(phoneRegExp, 'Phone number is not valid')\n          .test('len', 'Must be exactly 10 characters', val => val && val.toString().length === 10 )\n        })}\n      >\n        {\n                props=>{\n                    const{\n                        values,\n                        touched,\n                        errors,\n                        isSubmitting,\n                        handleChange,\n                        handleBlur,\n                        handleSubmit,\n                        isValid\n                    \n                \n            } = props;\n    return(\n    <>\n        {/*Iot Tag registration form tag*/ }\n        <Col lg=\"6\" md=\"9\">\n        <Form onSubmit={this.handleSubmit}>\n\n        <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0 text-center\">Product</h3>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\" className = \"text-center\">Product</th>\n                      <th scope=\"col\" className = \"text-center\">Quantity</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {dispList()}\n                    <tr>\n                      <th scope=\"col\" className = \"text-center\"><b>Total</b></th>\n                      <th id=\"sum\" scope=\"col\" className = \"text-center\" name = \"sum\">{sum} </th>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card>\n\n                <div className=\"text-muted text-center mt-2 mb-4\">\n              \n\n              <Col >\n                            <label\n                              className=\"form-control-label\"\n                            >\n                            <b className=\"text-white\">Phone Number</b>\n                            </label>\n                            <Input\n                              className=\"form-control-alternative text-dark\"\n                              id=\"phoneNo\"\n                              type=\"number\"\n                              name=\"phoneNo\"\n                              value={values.phoneNo}\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              autoComplete = \"off\"\n                            />\n                            {errors.phoneNo? (             \n                    <div style={{color: 'red'}}>{errors.phoneNo}</div>           \n                    ) : null}\n                            <label\n                              className=\"form-control-label\"\n                            >\n                            <b className=\"text-white\">Email ID</b>\n                            </label>\n                            <Input\n                              className=\"form-control-alternative text-dark\"\n                              id=\"emailId\"\n                              type=\"email\"\n                              name=\"emailId\"\n                              value={values.emailId}\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              autoComplete = \"off\"\n                            />\n                            {touched.emailId ? (             \n                    <div style={{color: 'red'}}>{errors.emailId}</div>           \n                    ) : null}\n                        </Col>\n                        <br></br>\n                        <Button value={sum} color=\"primary\" name = \"confirm\" type=\"submit\" disabled={!isValid}>\n                    Confirm Products\n              </Button>\n              <Button  color=\"primary\" onClick={this.handleClick} name = \"back\" >\n                    Back\n              </Button>\n              </div>\n                </Form>\n              \n              \n        </Col>\n        \n        \n   </>\n    );\n  }}\n  </Formik>\n  )}\n\n  componentDidMount(){\n    const tempstate = this.state;\n    const setP = (data) =>{\n      this.setState ({\n        products : data\n      })\n    } \n    fetch(\"/productList\", {\n      method: 'POST',\n      headers: {\n      'Content-Type': 'application/json'},\n    }).then(function(response) {\n      if (response.status >= 400) {\n        throw new Error(\"Bad response from server\");\n      }\n      return response.json();\n    }).then(function(data) {\n      console.log(data);\n      //tempstate.products=data\n      if (tempstate.products.length === 0)\n      setP(data) \n    }).catch(function(err) {\n      console.log(err)\n    });\n  }\n\n  disp=(pro)=>{ \n  return pro.map((data,key)=>{\n    if (!('quantity' in data))\n    data.quantity = null;\n    return (\n      <tr key={key}>\n                      <th scope=\"row\">{data.name}</th>\n                      <td>{data.pid}</td>\n                      <td>{data.cost}</td>\n                      <td>\n                        <div>\n                        <input type=\"number\" defaultValue={data.quantity} className=\"number text-center\" min=\"1\" \n                        max = {data.stock}  style = {{width: 50}} onChange = {\n                          (e)=>{\n                            \n                            if (parseInt(e.target.value) <= data.stock)\n                            {data.quantity = parseInt( e.target.value)\n                              if(data.quantity===0 || data.quantity===null)\n                              this.setState({checkQuant:true})\n                              else\n                                this.setState({checkQuant:false})\n                            }\n                            else\n                            e.target.value = null\n                          }\n                        }></input>\n                        <sub></sub>\n                        </div>\n                      </td>\n                    </tr>\n    )\n\n  })\n}\n  \n  render() {\n    \n    return (\n       this.state.list ?this.cList(): this.billingList()\n    );\n  }\n}\nexport default Billing;\n"]},"metadata":{},"sourceType":"module"}