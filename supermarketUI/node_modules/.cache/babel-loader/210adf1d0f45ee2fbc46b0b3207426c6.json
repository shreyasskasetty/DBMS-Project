{"ast":null,"code":"import { v4 } from 'uuid';\nexport var TOOL_PENCIL = 'pencil';\nexport default (function (context) {\n  var stroke = null;\n  var points = [];\n\n  var onMouseDown = function onMouseDown(x, y, color, size) {\n    stroke = {\n      id: v4(),\n      tool: TOOL_PENCIL,\n      color: color,\n      size: size,\n      points: [{\n        x: x,\n        y: y\n      }]\n    };\n    return [stroke];\n  };\n\n  var drawLine = function drawLine(item, start, _ref) {\n    var x = _ref.x,\n        y = _ref.y;\n    context.save();\n    context.lineJoin = 'round';\n    context.lineCap = 'round';\n    context.beginPath();\n    context.lineWidth = item.size;\n    context.strokeStyle = item.color;\n    context.globalCompositeOperation = 'source-over';\n    context.moveTo(start.x, start.y);\n    context.lineTo(x, y);\n    context.closePath();\n    context.stroke();\n    context.restore();\n  };\n\n  var onMouseMove = function onMouseMove(x, y) {\n    if (!stroke) return [];\n    var newPoint = {\n      x: x,\n      y: y\n    };\n    var start = stroke.points.slice(-1)[0];\n    drawLine(stroke, start, newPoint);\n    stroke.points.push(newPoint);\n    points.push(newPoint);\n    return [stroke];\n  };\n\n  var onDebouncedMouseMove = function onDebouncedMouseMove() {\n    var debouncedPoints = points;\n    points = [];\n    return [stroke, debouncedPoints];\n  };\n\n  var onMouseUp = function onMouseUp(x, y) {\n    if (!stroke) return;\n    onMouseMove(x, y);\n    points = [];\n    var item = stroke;\n    stroke = null;\n    return [item];\n  };\n\n  var draw = function draw(item, animate) {\n    var time = 0;\n    var i = 0;\n    var j = item.points.length;\n\n    for (i, j; i < j; i++) {\n      if (!item.points[i - 1]) continue;\n\n      if (animate) {\n        setTimeout(drawLine.bind(null, item, item.points[i - 1], item.points[i]), time);\n        time += 10;\n      } else {\n        drawLine(item, item.points[i - 1], item.points[i]);\n      }\n    }\n  };\n\n  return {\n    onMouseDown: onMouseDown,\n    onMouseMove: onMouseMove,\n    onDebouncedMouseMove: onDebouncedMouseMove,\n    onMouseUp: onMouseUp,\n    draw: draw\n  };\n});","map":{"version":3,"sources":["/home/sathvik/Desktop/Argon/DBMS-Project/supermarketUI/src/tools/pencil.js"],"names":["v4","TOOL_PENCIL","context","stroke","points","onMouseDown","x","y","color","size","id","tool","drawLine","item","start","save","lineJoin","lineCap","beginPath","lineWidth","strokeStyle","globalCompositeOperation","moveTo","lineTo","closePath","restore","onMouseMove","newPoint","slice","push","onDebouncedMouseMove","debouncedPoints","onMouseUp","draw","animate","time","i","j","length","setTimeout","bind"],"mappings":"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","sourcesContent":["import { v4 } from 'uuid';\n\nexport const TOOL_PENCIL = 'pencil';\n\nexport default (context) => {\n  let stroke = null;\n  let points = [];\n\n  const onMouseDown = (x, y, color, size) => {\n    stroke = {\n      id: v4(),\n      tool: TOOL_PENCIL,\n      color,\n      size,\n      points: [{ x, y }]\n    };\n    return [stroke];\n  };\n\n  const drawLine = (item, start, { x, y }) => {\n    context.save();\n    context.lineJoin = 'round';\n    context.lineCap = 'round';\n    context.beginPath();\n    context.lineWidth = item.size;\n    context.strokeStyle = item.color;\n    context.globalCompositeOperation = 'source-over';\n    context.moveTo(start.x, start.y);\n    context.lineTo(x, y);\n    context.closePath();\n    context.stroke();\n    context.restore();\n  };\n\n  const onMouseMove = (x, y) => {\n    if (!stroke) return [];\n    const newPoint = { x, y };\n    const start = stroke.points.slice(-1)[0];\n    drawLine(stroke, start, newPoint);\n    stroke.points.push(newPoint);\n    points.push(newPoint);\n\n    return [stroke];\n  };\n\n  const onDebouncedMouseMove = () => {\n    const debouncedPoints = points;\n    points = [];\n    return [stroke, debouncedPoints];\n  };\n\n  const onMouseUp = (x, y) => {\n    if (!stroke) return;\n    onMouseMove(x, y);\n    points = [];\n    const item = stroke;\n    stroke = null;\n    return [item];\n  };\n\n  const draw = (item, animate) => {\n    let time = 0;\n    let i = 0;\n    const j = item.points.length;\n    for (i, j; i < j; i++) {\n      if (!item.points[i - 1]) continue;\n      if (animate) {\n        setTimeout(drawLine.bind(null, item, item.points[i - 1], item.points[i]), time);\n        time += 10;\n      } else {\n        drawLine(item, item.points[i - 1], item.points[i]);\n      }\n    }\n  };\n\n  return {\n    onMouseDown,\n    onMouseMove,\n    onDebouncedMouseMove,\n    onMouseUp,\n    draw,\n  };\n};"]},"metadata":{},"sourceType":"module"}