{"ast":null,"code":"import _objectSpread from \"/home/shreyas/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/shreyas/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shreyas/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shreyas/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shreyas/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shreyas/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shreyas/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shreyas/DBMS-Project/supermarketUI/src/views/Index.jsx\";\n\n/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\"; // node.js library that concatenates classes (strings)\n\nimport classnames from \"classnames\"; // javascipt plugin for creating charts\n\nimport Chart from \"chart.js\"; // react plugin used to create charts\n\nimport { Line, Bar } from \"react-chartjs-2\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, NavItem, NavLink, Nav, Progress, Table, Container, Row, Col } from \"reactstrap\"; // core components\n\nimport { chartOptions, parseOptions, chartExample1 } from \"variables/charts.jsx\";\nimport Header from \"components/Headers/Header.jsx\";\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n    _this.state = {\n      activeNav: 1,\n      chartExample1Data: \"data1\",\n      chartExampl: {\n        options: {\n          scales: {\n            yAxes: [{\n              ticks: {\n                callback: function callback(value) {\n                  if (!(value % 10)) {\n                    //return '$' + value + 'k'\n                    return value;\n                  }\n                }\n              }\n            }]\n          },\n          tooltips: {\n            callbacks: {\n              label: function label(item, data) {\n                var label = data.datasets[item.datasetIndex].label || \"\";\n                var yLabel = item.yLabel;\n                var content = \"\";\n\n                if (data.datasets.length > 1) {\n                  content += label;\n                }\n\n                content += yLabel;\n                return content;\n              }\n            }\n          }\n        },\n        data: {\n          labels: [],\n          datasets: [{\n            label: \"Sales\",\n            data: []\n          }]\n        }\n      },\n      chartExampl1: {\n        options: {\n          scales: {\n            yAxes: [{\n              ticks: {\n                callback: function callback(value) {\n                  if (!(value % 10)) {\n                    //return '$' + value + 'k'\n                    return value;\n                  }\n                }\n              }\n            }]\n          },\n          tooltips: {\n            callbacks: {\n              label: function label(item, data) {\n                var label = data.datasets[item.datasetIndex].label || \"\";\n                var yLabel = item.yLabel;\n                var content = \"\";\n\n                if (data.datasets.length > 1) {\n                  content += label;\n                }\n\n                content += yLabel;\n                return content;\n              }\n            }\n          }\n        },\n        data: {\n          labels: [],\n          datasets: [{\n            label: \"Sales\",\n            data: []\n          }]\n        }\n      },\n      cusData: []\n    };\n\n    _this.handleClick = function (e) {\n      e.preventDefault();\n      var id = e.currentTarget.dataset.id;\n\n      var setX = function setX(dat) {\n        var labels1 = [];\n        var qu1 = [];\n\n        for (var i = 0; i < dat.length; i++) {\n          labels1.push(dat[i].pid);\n          qu1.push(dat[i].sq);\n        }\n\n        var temChat = _this.state.chartExampl1;\n        temChat.data.labels = labels1;\n        temChat.data.datasets.push({\n          label: \"sales\",\n          data: qu1\n        });\n\n        _this.setState(_objectSpread({}, _this.state, {\n          chartExampl1: temChat\n        }));\n      };\n\n      fetch(\"/cusAnalysis\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          cid: id\n        })\n      }).then(function (response) {\n        if (response.status >= 400) {\n          throw new Error(\"Bad response from server\");\n        }\n\n        return response.json();\n      }).then(function (data) {\n        if (data.staus === true) {\n          setX(data.data);\n        } else if (data.staus === false) {\n          alert(data.message);\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n      fetch(\"/analysis\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          cid: id\n        })\n      }).then(function (response) {\n        if (response.status >= 400) {\n          throw new Error(\"Bad response from server\");\n        }\n\n        return response.json();\n      }).then(function (data) {\n        if (data.staus === true) {} else if (data.staus === false) {\n          alert(data.message);\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    };\n\n    _this.dispTable = function () {\n      var list = _this.state.cusData;\n\n      if (list.length !== 0) {\n        return list.map(function (data, key) {\n          return React.createElement(\"tr\", {\n            key: data.cid,\n            \"data-id\": data.cid,\n            value: data.cid,\n            onClick: _this.handleClick,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 301\n            },\n            __self: this\n          }, React.createElement(\"th\", {\n            scope: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 302\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            id: data.cid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 302\n            },\n            __self: this\n          }, \" \", data.name)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 303\n            },\n            __self: this\n          }, data.sq), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 304\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"col text-right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 305\n            },\n            __self: this\n          }, React.createElement(Button, {\n            color: \"primary\",\n            size: \"sm\",\n            value: data.cid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 306\n            },\n            __self: this\n          }, \"Analyse\"))));\n        });\n      } else return null;\n    };\n\n    _this.dispTable = _this.dispTable.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var setP = function setP(dat) {\n        console.log('chnages');\n        var labels = [];\n        var qu = [];\n\n        for (var i = 0; i < dat.length; i++) {\n          labels.push(dat[i].name);\n          qu.push(dat[i].sq);\n        }\n\n        var temChat = _this2.state.chartExampl;\n        temChat.data.labels = labels;\n        temChat.data.datasets.push({\n          label: \"sales\",\n          data: qu\n        });\n\n        _this2.setState(_objectSpread({}, _this2.state, {\n          chartExampl: temChat\n        }));\n      };\n\n      var setC = function setC(data) {\n        _this2.setState(_objectSpread({}, _this2.state, {\n          cusData: data\n        }));\n      };\n\n      fetch(\"/chartData\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: null\n      }).then(function (response) {\n        if (response.status >= 400) {\n          throw new Error(\"Bad response from server\");\n        }\n\n        return response.json();\n      }).then(function (data) {\n        if (data.status === \"success\") {\n          setP(data.rows);\n        } else if (data.status === \"failure\") {\n          alert(data.message);\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n      fetch(\"/cusData\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: null\n      }).then(function (response) {\n        if (response.status >= 400) {\n          throw new Error(\"Bad response from server\");\n        }\n\n        return response.json();\n      }).then(function (data) {\n        if (data.status === \"success\") {\n          setC(data.rows);\n        } else if (data.status === \"failure\") {\n          alert(data.message);\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (window.Chart) {\n        parseOptions(Chart, chartOptions());\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }), React.createElement(Container, {\n        className: \"mt--7\",\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"mb-5 mb-xl-0\",\n        xl: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"border-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, \"Customer visits\")))), React.createElement(Table, {\n        className: \"align-items-center table-flush\",\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"thead-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, \"Customer name\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, \"Visits\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, this.dispTable())))), React.createElement(Col, {\n        xl: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"bg-transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"text-uppercase text-muted ls-1 mb-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, \"Performance\"), React.createElement(\"h2\", {\n        className: \"mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, \"Total orders\")))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, React.createElement(Bar, {\n        data: this.state.chartExampl.data,\n        options: this.state.chartExampl.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      })))))), React.createElement(Row, {\n        className: \"mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xl: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"bg-transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"text-uppercase text-muted ls-1 mb-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, \"Customer\"), React.createElement(\"h2\", {\n        className: \"mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, \"Total orders\")))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, React.createElement(Bar, {\n        data: this.state.chartExampl1.data,\n        options: this.state.chartExampl1.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport default Index;","map":{"version":3,"sources":["/home/shreyas/DBMS-Project/supermarketUI/src/views/Index.jsx"],"names":["React","classnames","Chart","Line","Bar","Button","Card","CardHeader","CardBody","NavItem","NavLink","Nav","Progress","Table","Container","Row","Col","chartOptions","parseOptions","chartExample1","Header","Index","props","state","activeNav","chartExample1Data","chartExampl","options","scales","yAxes","ticks","callback","value","tooltips","callbacks","label","item","data","datasets","datasetIndex","yLabel","content","length","labels","chartExampl1","cusData","handleClick","e","preventDefault","id","currentTarget","dataset","setX","dat","labels1","qu1","i","push","pid","sq","temChat","setState","fetch","method","headers","body","JSON","stringify","cid","then","response","status","Error","json","staus","alert","message","catch","err","console","log","dispTable","list","map","key","name","bind","setP","qu","setC","rows","window","Component"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// node.js library that concatenates classes (strings)\nimport classnames from \"classnames\";\n// javascipt plugin for creating charts\nimport Chart from \"chart.js\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\n// core components\nimport {\n  chartOptions,\n  parseOptions,\n  chartExample1,\n} from \"variables/charts.jsx\";\n\nimport Header from \"components/Headers/Header.jsx\";\n\nclass Index extends React.Component {\n  constructor(props){\n    super(props)\n    this.dispTable = this.dispTable.bind(this )\n  }\n  state = {\n    activeNav: 1,\n    chartExample1Data: \"data1\",\n    chartExampl : {\n      options: {\n        scales: {\n          yAxes: [\n            {\n              ticks: {\n                callback: function(value) {\n                  if (!(value % 10)) {\n                    //return '$' + value + 'k'\n                    return value;\n                  }\n                }\n              }\n            }\n          ]\n        },\n        tooltips: {\n          callbacks: {\n            label: function(item, data) {\n              var label = data.datasets[item.datasetIndex].label || \"\";\n              var yLabel = item.yLabel;\n              var content = \"\";\n              if (data.datasets.length > 1) {\n                content += label;\n              }\n              content += yLabel;\n              return content;\n            }\n          }\n        }\n      },\n      data: {\n        labels: [],\n        datasets: [\n          {\n            label: \"Sales\",\n            data: []\n          }\n        ]\n      }\n    },\n    chartExampl1 : {\n      options: {\n        scales: {\n          yAxes: [\n            {\n              ticks: {\n                callback: function(value) {\n                  if (!(value % 10)) {\n                    //return '$' + value + 'k'\n                    return value;\n                  }\n                }\n              }\n            }\n          ]\n        },\n        tooltips: {\n          callbacks: {\n            label: function(item, data) {\n              var label = data.datasets[item.datasetIndex].label || \"\";\n              var yLabel = item.yLabel;\n              var content = \"\";\n              if (data.datasets.length > 1) {\n                content += label;\n              }\n              content += yLabel;\n              return content;\n            }\n          }\n        }\n      },\n      data: {\n        labels: [],\n        datasets: [\n          {\n            label: \"Sales\",\n            data: []\n          }\n        ]\n      }\n    },\n    cusData:[]\n  };\n\n  componentDidMount(){\n    const setP= (dat)=>{\n      console.log('chnages')\n      var labels = []\n      var qu = []\n      for (let i=0; i< dat.length;i++)\n      {\n        labels.push(dat[i].name)\n        qu.push(dat[i].sq)\n      }\n      var temChat = this.state.chartExampl\n      temChat.data.labels = labels\n      temChat.data.datasets.push({label: \"sales\", data : qu})\n      this.setState({\n          ...this.state,\n          chartExampl : temChat\n      })\n    }\n\n    const setC = (data)=>{\n      this.setState({\n        ...this.state,\n        cusData : data\n      })\n    }\n    fetch(\"/chartData\", {\n      method: 'POST',\n      headers: {\n      'Content-Type': 'application/json'},\n      body: null\n      })\n      .then(function(response) {\n        if (response.status >= 400) {\n          throw new Error(\"Bad response from server\");\n        }\n        return response.json();\n      })\n      .then(function(data){         \n        if (data.status === \"success\")\n        {\n          setP(data.rows)\n        }\n        else if (data.status === \"failure\")\n        {\n          alert(data.message)\n        }\n      }).catch(function(err) {\n      console.log(err)\n      });\n\n      fetch(\"/cusData\", {\n        method: 'POST',\n        headers: {\n        'Content-Type': 'application/json'},\n        body: null\n        })\n        .then(function(response) {\n          if (response.status >= 400) {\n            throw new Error(\"Bad response from server\");\n          }\n          return response.json();\n        })\n        .then(function(data){         \n          if (data.status === \"success\")\n          {\n            setC(data.rows)\n          }\n          else if (data.status === \"failure\")\n          {\n            alert(data.message)\n          }\n        }).catch(function(err) {\n        console.log(err)\n        });\n      \n      \n  }\n\n\n  handleClick = (e)=>{\n    e.preventDefault()\n    var id = e.currentTarget.dataset.id\n    \n    const setX= (dat)=>{\n      var labels1 = []\n      var qu1 = []\n      for (let i=0; i< dat.length;i++)\n      {\n        labels1.push(dat[i].pid)\n        qu1.push(dat[i].sq)\n      }\n      var temChat = this.state.chartExampl1\n      temChat.data.labels = labels1\n      temChat.data.datasets.push({label: \"sales\", data : qu1})\n      this.setState({\n          ...this.state,\n          chartExampl1 : temChat\n      })\n    }\n    \n    fetch(\"/cusAnalysis\", {\n      method: 'POST',\n      headers: {\n      'Content-Type': 'application/json'},\n      body: JSON.stringify({cid : id})\n      })\n      .then(function(response) {\n        if (response.status >= 400) {\n          throw new Error(\"Bad response from server\");\n        }\n        return response.json();\n      })\n      .then(function(data){\n        if (data.staus === true)\n        {\n          setX(data.data)\n        }\n        else if (data.staus === false)\n        {\n          alert(data.message)\n        }\n      }).catch(function(err) {\n      console.log(err)\n      });\n      fetch(\"/analysis\", {\n        method: 'POST',\n        headers: {\n        'Content-Type': 'application/json'},\n        body: JSON.stringify({cid : id})\n        })\n        .then(function(response) {\n          if (response.status >= 400) {\n            throw new Error(\"Bad response from server\");\n          }\n          return response.json();\n        })\n        .then(function(data){\n          if (data.staus === true)\n          {\n            \n          }\n          else if (data.staus === false)\n          {\n            alert(data.message)\n          }\n        }).catch(function(err) {\n        console.log(err)\n        });\n  }\n\n\n  dispTable = ()=>{\n    var list = this.state.cusData\n    if (list.length !== 0)\n    {\n      return(\n        list.map((data,key)=>{\n          return(\n            <tr key = {data.cid} data-id= {data.cid} value={data.cid} onClick={this.handleClick}>\n                      <th scope=\"row\"  ><div id = {data.cid}> {data.name}</div></th>\n                      <td>{data.sq}</td>\n                      <td>\n                      <div className=\"col text-right\">\n                      <Button\n                        color=\"primary\"\n                        size=\"sm\"\n                        value = {data.cid}\n                      >\n                        Analyse\n                      </Button>\n                    </div>\n                      </td>\n                     \n                    </tr>\n          )\n        })\n      )\n    }\n    else return null\n  }\n\n  componentWillMount() {\n    if (window.Chart) {\n      parseOptions(Chart, chartOptions());\n    }\n  }\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n          <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Customer visits</h3>\n                    </div>\n                    \n                  </Row>\n                </CardHeader>\n\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">Customer name</th>\n                      <th scope=\"col\">Visits</th>\n                     \n                    </tr>\n                   \n                  </thead>\n                  <tbody>\n                    {this.dispTable()}\n\n                  </tbody>\n                </Table>\n              </Card>\n            </Col>\n\n            \n\n            {/*Total Sales */}\n            <Col xl=\"4\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"bg-transparent\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\n                        Performance\n                      </h6>\n                      <h2 className=\"mb-0\">Total orders</h2>\n                    </div>\n                  </Row>\n                </CardHeader>\n               \n                <CardBody>\n                  {/* Chart */}\n                  <div className=\"chart\">\n                    <Bar\n                      data={this.state.chartExampl.data}\n                      options={this.state.chartExampl.options}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row className=\"mt-5\">\n            <Col xl=\"4\"> \n            <Card className=\"shadow\">\n                <CardHeader className=\"bg-transparent\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\n                        Customer\n                      </h6>\n                      <h2 className=\"mb-0\">Total orders</h2>\n                    </div>\n                  </Row>\n                </CardHeader>\n               \n                <CardBody>\n                  <div className=\"chart\">\n                    <Bar\n                      data={this.state.chartExampl1.data}\n                      options={this.state.chartExampl1.options}\n                    />\n                  </div>\n                </CardBody>\n                </Card>\n                \n            </Col> \n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}