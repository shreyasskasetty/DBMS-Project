{"ast":null,"code":"import _classCallCheck from \"/home/shreyas/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shreyas/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shreyas/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shreyas/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shreyas/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shreyas/DBMS-Project/supermarketUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shreyas/DBMS-Project/supermarketUI/src/views/examples/Login.jsx\";\n\n/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, FormGroup, Form, Input, InputGroupAddon, InputGroupText, InputGroup, Col } from \"reactstrap\";\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n    _this.state = {\n      empid: \"\",\n      empidfield: false,\n      password: false\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      console.log('Clicked');\n      this.props.updateEmpId();\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState({\n        empidfield: true,\n        passwordfield: true\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      console.log(this.state);\n      event.preventDefault();\n\n      if (!(this.props.eLogin ^ this.props.aLogin)) {\n        var tempProp = this.props;\n        var data = {\n          empid: event.target.empid.value,\n          password: event.target.password.value,\n          mssg: ''\n        };\n        fetch(\"/emplogin\", {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        }).then(function (response) {\n          if (response.status >= 400) {\n            throw new Error(\"Bad response from server\");\n          }\n\n          return response.json();\n        }).then(function (dat) {\n          if (dat.success) {\n            tempProp.updateEmpId(data.empid);\n            window.location.assign(\"/auth/register\");\n          } else alert('Wrong Password'); // redirect to other page\n\n        }).catch(function (err) {\n          console.log(err);\n        });\n      } else alert('Admin Should Logout');\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        empidfield: false,\n        passwordfield: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Formik, {\n        initialValues: {\n          empid: \"\",\n          password: \"\"\n        },\n        onSubmit: function onSubmit(values, _ref) {\n          var setSubmitting = _ref.setSubmitting;\n          setTimeout(function () {\n            _this2.handleSubmit(values);\n\n            setSubmitting(false);\n          }, 500);\n        },\n        validationSchema: Yup.object().shape({\n          empid: Yup.number().required(\"No Employee ID provided\").positive().integer(),\n          password: Yup.string().required(\"No password provided.\").min(4, \"password is tooo short - should be 4 characters atleast\")\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, function (props) {\n        var values = props.values,\n            touched = props.touched,\n            errors = props.errors,\n            isSubmitting = props.isSubmitting,\n            handleChange = props.handleChange,\n            handleBlur = props.handleBlur,\n            handleSubmit = props.handleSubmit,\n            isValid = props.isValid;\n        return React.createElement(React.Fragment, null, React.createElement(Col, {\n          lg: \"5\",\n          md: \"7\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(Card, {\n          className: \"bg-secondary shadow border-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(CardHeader, {\n          className: \"bg-transparent pb-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"text-muted text-center mt-2 mb-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(\"small\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, \"Sign in \"))), React.createElement(CardBody, {\n          className: \"px-lg-5 py-lg-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(Form, {\n          role: \"form\",\n          onSubmit: function onSubmit(event) {\n            return _this2.handleSubmit(event);\n          },\n          method: \"POST\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          className: \"mb-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(InputGroup, {\n          className: \"input-group-alternative\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(InputGroupAddon, {\n          addonType: \"prepend\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(InputGroupText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"ni ni-email-83\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }))), React.createElement(Input, {\n          onChange: _this2.onChange,\n          placeholder: \"EmployeeID\",\n          type: \"number\",\n          onBlur: handleBlur,\n          autoComplete: \"off\",\n          name: \"empid\",\n          className: errors.empid && touched.empid && \"error\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        })), errors.empid && touched.empid && React.createElement(\"div\", {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, errors.empid)), React.createElement(FormGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, React.createElement(InputGroup, {\n          className: \"input-group-alternative\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, React.createElement(InputGroupAddon, {\n          addonType: \"prepend\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, React.createElement(InputGroupText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"ni ni-lock-circle-open\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }))), React.createElement(Input, {\n          placeholder: \"Password\",\n          name: \"password\",\n          type: \"password\",\n          onChange: _this2.onChange,\n          onBlur: handleBlur,\n          autoComplete: \"off\",\n          className: errors.password && touched.password && \"error\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        })), errors.password && React.createElement(\"div\", {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, errors.password)), React.createElement(\"div\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"my-4\",\n          color: \"primary\",\n          type: \"submit\",\n          disabled: !isValid || !_this2.state.empidfield && !_this2.state.passwordfield,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, \"Sign in\")))))));\n      });\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(state);\n  return {\n    eLogin: state.eLogin,\n    aLogin: state.aLogin\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateEmpId: function updateEmpId(id) {\n      console.log(id);\n      dispatch({\n        type: 'updateEmpID',\n        empid: id,\n        eLogin: true\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/shreyas/DBMS-Project/supermarketUI/src/views/examples/Login.jsx"],"names":["React","connect","Formik","Yup","Button","Card","CardHeader","CardBody","FormGroup","Form","Input","InputGroupAddon","InputGroupText","InputGroup","Col","Login","props","state","empid","empidfield","password","onChange","bind","event","console","log","updateEmpId","e","setState","passwordfield","preventDefault","eLogin","aLogin","tempProp","data","target","value","mssg","fetch","method","headers","body","JSON","stringify","then","response","status","Error","json","dat","success","window","location","assign","alert","catch","err","values","setSubmitting","setTimeout","handleSubmit","object","shape","number","required","positive","integer","string","min","touched","errors","isSubmitting","handleChange","handleBlur","isValid","color","Component","mapStateToProps","mapDispatchToProps","dispatch","id","type"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport {connect} from 'react-redux';\nimport {Formik} from 'formik'\nimport * as Yup from 'yup'\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Col\n} from \"reactstrap\";\nclass Login extends React.Component {\n\nconstructor(props) {\n  super(props);\n  this.state ={\n    empid: \"\",\n    empidfield: false,\n    password: false\n  }\n  this.onChange = this.onChange.bind(this);\n} \nhandleClick(event){\n  console.log('Clicked');\n  this.props.updateEmpId()\n}\n  onChange(e){\n    this.setState({empidfield:true,passwordfield:true})\n  }\n  handleSubmit(event){\n    console.log(this.state)\n    event.preventDefault();\n    if (!(this.props.eLogin ^ this.props.aLogin))\n    {\n    const tempProp = this.props;\n    const data = {\n      empid :  event.target.empid.value, \n      password : event.target.password.value, \n      mssg : ''\n    }\n    fetch(\"/emplogin\", {\n      method: 'POST',\n      headers: {\n      'Content-Type': 'application/json'},\n      body: JSON.stringify(data) \n  }).then(function(response) {\n      if (response.status >= 400) {\n        throw new Error(\"Bad response from server\");\n      }\n      return response.json();\n  }).then(function(dat) {\n   \n      if(dat.success)\n      {\n      tempProp.updateEmpId(data.empid)\n      window.location.assign(\"/auth/register\");\n      }\n      else\n       alert('Wrong Password')\n     // redirect to other page\n  }).catch(function(err) {\n      console.log(err)\n  });\n  }\n  else alert('Admin Should Logout');\n\n    }\n  componentDidMount(){\n    this.setState({empidfield:false, passwordfield:false})\n  }\n  render() {\n    return (\n      <Formik\n      initialValues={{empid:\"\",password: \"\"}}\n        onSubmit={(values, {setSubmitting})=> {\n            setTimeout(()=>{\n                this.handleSubmit(values)\n                setSubmitting(false)\n            },500);\n        }}\n\n\n        validationSchema={Yup.object().shape({\n            empid: Yup\n            .number()\n            .required(\"No Employee ID provided\")\n            .positive()\n            .integer(),\n            password: Yup.string()\n            .required(\"No password provided.\")\n            .min(4,\"password is tooo short - should be 4 characters atleast\")\n        })}\n      >\n        {\n                props=>{\n                    const{\n                        values,\n                        touched,\n                        errors,\n                        isSubmitting,\n                        handleChange,\n                        handleBlur,\n                        handleSubmit,\n                        isValid\n                    \n                \n            } = props;\n        return(\n      <> \n        <Col lg=\"5\" md=\"7\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader className=\"bg-transparent pb-5\">\n              <div className=\"text-muted text-center mt-2 mb-3\">\n                <small>Sign in </small>\n              </div>\n             \n            </CardHeader>\n           \n            <CardBody className=\"px-lg-5 py-lg-5\">\n              {/*Email ID*/}\n              <Form role=\"form\" onSubmit={event => this.handleSubmit(event)} method=\"POST\">\n                <FormGroup className=\"mb-3\">\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-email-83\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input  onChange = {this.onChange} placeholder=\"EmployeeID\"\n                    type=\"number\"\n                    onBlur={handleBlur} \n                    autoComplete=\"off\"\n                    name= \"empid\"\n                    className={errors.empid && touched.empid && \"error\"}/>\n                  </InputGroup>\n                  {errors.empid && touched.empid && (\n            <div style={{ color: 'red' }}>{errors.empid}</div>\n                )}\n                </FormGroup>\n\n                {/*Password*/}\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-lock-circle-open\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Password\" \n                    name = \"password\" \n                    type=\"password\" \n                    onChange={this.onChange} \n                    onBlur={handleBlur}\n                    autoComplete=\"off\"\n                    className={errors.password && touched.password && \"error\"}/>\n                  </InputGroup>\n                  {errors.password && (\n                      <div style={{ color: 'red' }}>{errors.password}</div>\n                  )}\n                </FormGroup>\n\n                {/* Sign in BUTTON */}\n                <div className=\"text-center\">\n                  <Button className=\"my-4\" color=\"primary\" type=\"submit\" disabled={!isValid || (!this.state.empidfield && !this.state.passwordfield)}>\n                    Sign in\n                  </Button>\n                </div>\n\n              </Form>\n            </CardBody>\n\n          </Card>\n         \n        </Col>\n      </>\n            );    }}\n                </Formik>\n    );\n  }\n}\n\nconst mapStateToProps = (state) =>{\n  console.log(state)\n  return {\n    eLogin : state.eLogin,\n    aLogin : state.aLogin\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateEmpId : (id) =>{\n      console.log(id)\n      dispatch({\n        type : 'updateEmpID',\n        empid : id,\n        eLogin : true\n      })\n    }\n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}